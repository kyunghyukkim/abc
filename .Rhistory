'At the State Level: The Extremes')),
# Print the summary description, wrapped in the text box
tags$div(id = 'TabIntroBox',
tags$p(
tags$div(
id = 'GlobalMapIntro',
includeHTML('html/intros/sumTableText.html')
)
)
),
# render the summary table, centered horizontally
fluidRow(
column(12, align="center",
tableOutput('sumTable')
)
),
# UI SECTION FOR HISTOGRAM ---------------------------------------------
titlePanel(tags$div(id = "TabSectionHeader",
'At the State Level: A Comparison Tool')),
tags$div(id = 'TabIntroBox',
tags$p(
tags$div(
id = 'GlobalMapIntro',
includeHTML('html/intros/sumHistText.html')
)
)
),
sidebarLayout(
sidebarPanel(
# Define a drop-dwon style input with all three crime types
selectInput("histDataType", label = h3("Data"),
choices = list(
'Crime' = 'Crime',
'Education' = 'Education',
'Income' = 'Income'
)
),
sliderInput("histYear", label = h3("Year"), min = 1992,
max = 2010, value = 2000, sep = "", step = 2),
# Define a drop-down style input with all 50 states for first state choice
selectInput("histStateOne", label = h3("State One"),
choices = list(
'Alabama' = 'AL',
'Alaska' = 'AK',
'Arizona' = 'AZ',
'Arkansas' = 'AR',
'California' = 'CA',
'Colorado' = 'CO',
'Connecticut' = 'CT',
'Delaware' = 'DE',
'Florida' = 'FL',
'Georgia' = 'GA',
'Hawaii' = 'HI',
'Idaho' = 'ID',
'Illinois' = 'IL',
'Indiana' = 'IN',
'Iowa' = 'IA',
'Kansas' = 'KS',
'Kentucky' = 'KY',
'Louisiana' = 'LA',
'Maine' = 'ME',
'Maryland' = 'MD',
'Massachusetts' = 'MA',
'Michigan' = 'MI',
'Minnesota' = 'MN',
'Mississippi' = 'MS',
'Missouri' = 'MO',
'Montana' = 'MT',
'Nebraska' = 'NE',
'Nevada' = 'NV',
'New Hampsire' = 'NH',
'New Jersey' = 'NJ',
'New Mexico' = 'NM',
'New York' = 'NY',
'North Carolina' = 'NC',
'North Dakota' = 'ND',
'Ohio' = 'OH',
'Oklahoma' = 'OK',
'Oregon' = 'OR',
'Pennsylvania' = 'PA',
'Rhode Island' = 'RI',
'South Carolina' = 'SC',
'South Dakota' = 'SD',
'Tennessee' = 'TN',
'Texas' = 'TX',
'Utah' = 'UT',
'Vermont' = 'VT',
'Virginia' = 'VA',
'Washington' = 'WA',
'West Virgina' = 'WV',
'Wisconsin' = 'WI',
'Wyoming' = 'WY'
), selected = 'NM'
),
# Define a drop-down style input with all 50 states for second state choice
selectInput("histStateTwo", label = h3("State Two"),
choices = list(
'Alabama' = 'AL',
'Alaska' = 'AK',
'Arizona' = 'AZ',
'Arkansas' = 'AR',
'California' = 'CA',
'Colorado' = 'CO',
'Connecticut' = 'CT',
'Delaware' = 'DE',
'Florida' = 'FL',
'Georgia' = 'GA',
'Hawaii' = 'HI',
'Idaho' = 'ID',
'Illinois' = 'IL',
'Indiana' = 'IN',
'Iowa' = 'IA',
'Kansas' = 'KS',
'Kentucky' = 'KY',
'Louisiana' = 'LA',
'Maine' = 'ME',
'Maryland' = 'MD',
'Massachusetts' = 'MA',
'Michigan' = 'MI',
'Minnesota' = 'MN',
'Mississippi' = 'MS',
'Missouri' = 'MO',
'Montana' = 'MT',
'Nebraska' = 'NE',
'Nevada' = 'NV',
'New Hampsire' = 'NH',
'New Jersey' = 'NJ',
'New Mexico' = 'NM',
'New York' = 'NY',
'North Carolina' = 'NC',
'North Dakota' = 'ND',
'Ohio' = 'OH',
'Oklahoma' = 'OK',
'Oregon' = 'OR',
'Pennsylvania' = 'PA',
'Rhode Island' = 'RI',
'South Carolina' = 'SC',
'South Dakota' = 'SD',
'Tennessee' = 'TN',
'Texas' = 'TX',
'Utah' = 'UT',
'Vermont' = 'VT',
'Virginia' = 'VA',
'Washington' = 'WA',
'West Virgina' = 'WV',
'Wisconsin' = 'WI',
'Wyoming' = 'WY'
), selected = 'WA'
),
# Define a drop-down style input with all 50 states for third state choice
selectInput("histStateThree", label = h3("State Three"),
choices = list(
'Alabama' = 'AL',
'Alaska' = 'AK',
'Arizona' = 'AZ',
'Arkansas' = 'AR',
'California' = 'CA',
'Colorado' = 'CO',
'Connecticut' = 'CT',
'Delaware' = 'DE',
'Florida' = 'FL',
'Georgia' = 'GA',
'Hawaii' = 'HI',
'Idaho' = 'ID',
'Illinois' = 'IL',
'Indiana' = 'IN',
'Iowa' = 'IA',
'Kansas' = 'KS',
'Kentucky' = 'KY',
'Louisiana' = 'LA',
'Maine' = 'ME',
'Maryland' = 'MD',
'Massachusetts' = 'MA',
'Michigan' = 'MI',
'Minnesota' = 'MN',
'Mississippi' = 'MS',
'Missouri' = 'MO',
'Montana' = 'MT',
'Nebraska' = 'NE',
'Nevada' = 'NV',
'New Hampsire' = 'NH',
'New Jersey' = 'NJ',
'New Mexico' = 'NM',
'New York' = 'NY',
'North Carolina' = 'NC',
'North Dakota' = 'ND',
'Ohio' = 'OH',
'Oklahoma' = 'OK',
'Oregon' = 'OR',
'Pennsylvania' = 'PA',
'Rhode Island' = 'RI',
'South Carolina' = 'SC',
'South Dakota' = 'SD',
'Tennessee' = 'TN',
'Texas' = 'TX',
'Utah' = 'UT',
'Vermont' = 'VT',
'Virginia' = 'VA',
'Washington' = 'WA',
'West Virgina' = 'WV',
'Wisconsin' = 'WI',
'Wyoming' = 'WY'
), selected = 'NV'
)
),
mainPanel(plotlyOutput('histogram'))),
# UI SECTION FOR LINEAR PLOT ------------------------------------
titlePanel(tags$div(id = "TabSectionHeader",
'At the National Level: A High Level Comparison')),
tags$div(id = 'TabIntroBox',
tags$p(
tags$div(
id = 'GlobalMapIntro',
includeHTML('html/intros/linePlotText.html')
)
)
),
# define sidebar
sidebarLayout(
sidebarPanel(
sliderInput("linearPlot", label = h3("Year Range"), min = 1992,
max = 2010, value = c(1996, 2006), sep = "", step = 2)
),
# render the linear plot
mainPanel(plotlyOutput('linPlot'))),
# UI SPOT FOR TIME ANALYSIS GRAPH -----------------------------------
titlePanel(tags$div(id = "TabSectionHeader",
'At the State or National Level: Statistical Trends')),
tags$div(id = 'TabIntroBox',
tags$p(
tags$div(
id = 'GlobalMapIntro',
includeHTML('html/intros/timeAnalysisText.html')
)
)
),
sidebarLayout(
sidebarPanel(
# Define a drop-dwon style input with all three crime types
selectInput("timeDataChoice", label = h3("Data"),
choices = list(
'Crime' = 'Crime',
'Education' = 'Education',
'Income' = 'Income'
)
),
# Define a drop-down style input with all 50 states + US
selectInput("timeStateChoice", label = h3("State"),
choices = list(
'United States' = 'TOT',
'Alabama' = 'AL',
'Alaska' = 'AK',
'Arizona' = 'AZ',
'Arkansas' = 'AR',
'California' = 'CA',
'Colorado' = 'CO',
'Connecticut' = 'CT',
'Delaware' = 'DE',
'Florida' = 'FL',
'Georgia' = 'GA',
'Hawaii' = 'HI',
'Idaho' = 'ID',
'Illinois' = 'IL',
'Indiana' = 'IN',
'Iowa' = 'IA',
'Kansas' = 'KS',
'Kentucky' = 'KY',
'Louisiana' = 'LA',
'Maine' = 'ME',
'Maryland' = 'MD',
'Massachusetts' = 'MA',
'Michigan' = 'MI',
'Minnesota' = 'MN',
'Mississippi' = 'MS',
'Missouri' = 'MO',
'Montana' = 'MT',
'Nebraska' = 'NE',
'Nevada' = 'NV',
'New Hampsire' = 'NH',
'New Jersey' = 'NJ',
'New Mexico' = 'NM',
'New York' = 'NY',
'North Carolina' = 'NC',
'North Dakota' = 'ND',
'Ohio' = 'OH',
'Oklahoma' = 'OK',
'Oregon' = 'OR',
'Pennsylvania' = 'PA',
'Rhode Island' = 'RI',
'South Carolina' = 'SC',
'South Dakota' = 'SD',
'Tennessee' = 'TN',
'Texas' = 'TX',
'Utah' = 'UT',
'Vermont' = 'VT',
'Virginia' = 'VA',
'Washington' = 'WA',
'West Virgina' = 'WV',
'Wisconsin' = 'WI',
'Wyoming' = 'WY'
)
)
),
mainPanel(plotlyOutput('timeAnalysis'))),
# UI SECTION FOR Cross Analysis
titlePanel(tags$div(id = "TabSectionHeader",
'At the Overall Data Level: CrossAnalysis')),
tags$div(id = 'TabIntroBox',
tags$p(
tags$div(
id = 'GlobalMapIntro',
includeHTML('html/intros/crossAnalysisText.html')
)
)
),
sidebarLayout(
sidebarPanel(
# Define a drop-down style input with all 50 states
selectInput("crossState", label = h3("State"),
choices = list(
'United States' = 'TOT',
'Alabama' = 'AL',
'Alaska' = 'AK',
'Arizona' = 'AZ',
'Arkansas' = 'AR',
'California' = 'CA',
'Colorado' = 'CO',
'Connecticut' = 'CT',
'Delaware' = 'DE',
'Florida' = 'FL',
'Georgia' = 'GA',
'Hawaii' = 'HI',
'Idaho' = 'ID',
'Illinois' = 'IL',
'Indiana' = 'IN',
'Iowa' = 'IA',
'Kansas' = 'KS',
'Kentucky' = 'KY',
'Louisiana' = 'LA',
'Maine' = 'ME',
'Maryland' = 'MD',
'Massachusetts' = 'MA',
'Michigan' = 'MI',
'Minnesota' = 'MN',
'Mississippi' = 'MS',
'Missouri' = 'MO',
'Montana' = 'MT',
'Nebraska' = 'NE',
'Nevada' = 'NV',
'New Hampsire' = 'NH',
'New Jersey' = 'NJ',
'New Mexico' = 'NM',
'New York' = 'NY',
'North Carolina' = 'NC',
'North Dakota' = 'ND',
'Ohio' = 'OH',
'Oklahoma' = 'OK',
'Oregon' = 'OR',
'Pennsylvania' = 'PA',
'Rhode Island' = 'RI',
'South Carolina' = 'SC',
'South Dakota' = 'SD',
'Tennessee' = 'TN',
'Texas' = 'TX',
'Utah' = 'UT',
'Vermont' = 'VT',
'Virginia' = 'VA',
'Washington' = 'WA',
'West Virgina' = 'WV',
'Wisconsin' = 'WI',
'Wyoming' = 'WY'
)
),
# Define a drop-dwon style input with all three crime types for first data type
selectInput("crossData", label = h3("Data"),
choices = list(
'Crime Vs. Income' = 'Crime-Income',
'Income Vs. Education' = 'Income-Education',
'Education Vs. Crime' = 'Education-Crime'
)
)
),
mainPanel(plotlyOutput('crossAnalysis')))
),
# PREDICTION TAB ==============================================================================================
tabPanel(
# home page tab that reads in data from html/index.html
titlePanel(
tags$div(id = 'GlobalNavTab', 'Prediction'),
windowTitle = 'Prediction'
),
titlePanel(tags$div(id = "TabSectionHeader",
'Education Prediction')),
tags$div(id = "TabIntroBox",
tags$p(
tags$div(
id = 'GlobalMapIntro',
includeHTML('html/intros/PredictEducationWriteup.html')
)
)
)
)
# END TABS ==========================================================================================================
)
)
shiny::runApp('C:/Users/Keagan Moo/Desktop/Academic/Junior/Winter/INFO/Doohickey/Group-Project-Bitch-')
shiny::runApp('C:/Users/Keagan Moo/Desktop/Academic/Junior/Winter/INFO/Doohickey/Group-Project-Bitch-')
setwd("C:/Anaconda/Scripts/Snek/abc")
Data1 <- read.csv("var1.csv")
View(Data1)
Data1 <- read.csv("var1.csv", header = FALSE)
Data2 <- read.csv("var2.csv", header = FALSE)
hist(Data1)
hist(Data1[])
hist(Data1[:])
hist(Data1$V1)
hist(Data1$V2)
hist(Data2$V1)
hist(Data1$V1, breaks = 15)
hist(Data2$V1, breaks = 15)
hist(Data2$V1, breaks = 15)
hist(Data1$V1, breaks = 15)
hist(Data1$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 200))
hist(Data2$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 200))
hist(Data1$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 200))
hist(Data2$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 200))
plot(Data1$V1, Data2$V1, xlim = c(-10, 10), ylim = c(-10, 10))
Data1 <- read.csv("var1.csv", header = FALSE)
Data2 <- read.csv("var2.csv", header = FALSE)
hist(Data2$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 2000))
hist(Data1$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 2000))
plot(Data1$V1, Data2$V1, xlim = c(-10, 10), ylim = c(-10, 10))
hist(Data1$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 2000))
curve(dnorm(x, mean=0, sd=1, add=TRUE)
)
curve(dnorm(x, mean=0, sd=1), add=TRUE)
Prop1 <- Data1$V1/10000
Prop2 <- Data2$V1/10000
hist(Prop1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 2000))
hist(Data1$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 2000))
hist(Data1$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 1))
curve(dnorm(x, mean=0, sd=1), add=TRUE)
hist(Data1$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 0.7))
curve(dnorm(x, mean=0, sd=1), add=TRUE)
hist(Data1$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 0.7), xlabel = "P1")
hist(Data1$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 0.7), xlab = "P1")
curve(dnorm(x, mean=0, sd=1), add=TRUE)
hist(Data2$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 0.7), xlab = "P2")
curve(dnorm(x, mean=3, sd=3), add=TRUE)
plot(Data1$V1, Data2$V1, xlim = c(-10, 10), ylim = c(-10, 10))
xcirc <- function(t) 1*sin(t)
ycirc <- function(t) 1*cos(t)
ycirc <- function(t) 3*cos(t)
ycirc <- function(t) 3 + 3*cos(t)
t = seq(0, 2*pi)
t = seq(0, 2*pi, by = 0.1)
dat = data.frame(t = seq(0, 2*pi, by = 0.1))
dat$y = ycirc(dat$t)
dat$x = xcirc(dat$t)
with(dat, plot(x,y, type = "l"))
plot(Data1$V1, Data2$V1, xlim = c(-10, 10), ylim = c(-10, 10))
with(dat, lines(x,y, type = "l"))
plot(Data1$V1, Data2$V1, xlim = c(-10, 10), ylim = c(-10, 10), xlab = "P1", ylab = "P2")
with(dat, lines(x,y, type = "l"))
plot(Data1$V1, Data2$V1, xlim = c(-15, 15), ylim = c(-15, 15), xlab = "P1", ylab = "P2")
with(dat, lines(x,y, type = "l"))
lines(dat$x, dat$y, type = "l")
lines(dat$x, dat$y)
xgen <- seq(-15,15, 0.1)
ygen <- xgen^2
lines(xgen, ygen)
plot(Data1$V1, Data2$V1, xlim = c(-15, 15), ylim = c(-15, 15), xlab = "P1", ylab = "P2")
with(dat, lines(x,y, type = "l", col = "hotpink"))
plot(Data1$V1, Data2$V1, xlim = c(-15, 15), ylim = c(-15, 15), xlab = "P1", ylab = "P2")
ycirc <- function(t) 30*cos(t)
xcirc <- function(t) 10*sin(t)
dat$x = xcirc(dat$t)
dat$y = ycirc(dat$t)
with(dat, lines(x,y, type = "l", col = "hotpink"))
ycirc <- function(t) 6*cos(t)
xcirc <- function(t) 2*sin(t)
dat$x = xcirc(dat$t)
dat$y = ycirc(dat$t)
with(dat, lines(x,y, type = "l", col = "hotpink"))
ycirc <- function(t) 3 + 9*cos(t)
xcirc <- function(t) 3*sin(t)
dat$x = xcirc(dat$t)
dat$y = ycirc(dat$t)
plot(Data1$V1, Data2$V1, xlim = c(-15, 15), ylim = c(-15, 15), xlab = "P1", ylab = "P2")
with(dat, lines(x,y, type = "l", col = "hotpink"))
with(dat, lines(x,y, type = "l", col = "hotpink"))
Data1 <- read.csv("var1.csv", header = FALSE)
Data2 <- read.csv("var2.csv", header = FALSE)
hist(Data1$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 2000))
hist(Data2$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 2000))
hist(Data2$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 20000))
hist(Data2$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 5000))
hist(Data1$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 5000))
hist(Data2$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 5000))
hist(Data1$V1, breaks = 15, xlim = c(-10, 10), ylim = c(0, 5000))
curve(dnorm(x, mean=3, sd=1), add=TRUE)
hist(Data1$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 5000))
hist(Data2$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 0.7), xlab = "P2")
hist(Data1$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 0.7), xlab = "P1")
curve(dnorm(x, mean=3, sd=1), add=TRUE)
hist(Data2$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 0.7), xlab = "P2")
hist(Data1$V1, breaks = 15, freq = FALSE, xlim = c(-20, 20), ylim = c(0, 0.7), xlab = "P1")
curve(dnorm(x, mean=3, sd=1), add=TRUE)
hist(Data2$V1, breaks = 15, freq = FALSE, xlim = c(-10, 10), ylim = c(0, 0.7), xlab = "P2")
hist(Data2$V1, breaks = 15, freq = FALSE, xlim = c(-20, 20), ylim = c(0, 0.7), xlab = "P2")
curve(dnorm(x, mean=-3, sd=3), add=TRUE)
plot(Data1$V1, Data2$V1, xlim = c(-15, 15), ylim = c(-15, 15), xlab = "P1", ylab = "P2")
